const Flight = require('../models/flights');

async function getFlights(req, res) {
    try {
        const flights = await Flight.find({}).sort({ departs: 'asc' });
        res.render('flights/index', { flights });
    } catch (error) {
        console.error(error);
    }
}
  
  function showFlightForm(req, res) {
    const newFlight = new Flight();
    const dt = newFlight.departs;
    let departsDate = `${dt.getFullYear()}-${(dt.getMonth() + 1).toString().padStart(2, '0')}`;
    departsDate += `-${dt.getDate().toString().padStart(2, '0')}T${dt.toTimeString().slice(0, 5)}`;
    res.render('flights/new', { departsDate });
}

async function createFlight(req, res) {
    try {
        const newFlight = new Flight(req.body);
        await newFlight.save();
        res.redirect('/flights');
    } catch (error) {
        console.error(error);
    }
}

async function showFlightDetails(req, res) {
    try {
        const flight = await Flight.findById(req.params.id);

        if (!flight){
            return res.status(404).render('error', { message: 'Flight not found'});
        }
        res.render('flights/show', { flight });
    } catch (error) {
      res.status(500).render('error', { message: 'Internal Server Error' });
    }
};

async function addDestination(req, res) {
    try {
      const flight = await Flight.findById(req.params.id);
      if (!flight) {
        return res.status(404).render('error', { message: 'Flight not found' });
      }
      const newDestination = {
        airport: req.body.airport,
        arrival: req.body.arrival,
      };
      flight.destinations.push(newDestination);
      await flight.save();
      res.redirect(`/flights/${flight._id}`);
    } catch (error) {
      console.error(error);
      res.status(500).render('error', { message: 'Internal Server Error' });
    }
  }


  module.exports = {
    getFlights,
    showFlightForm,
    createFlight,
    showFlightDetails,
    addDestination,
  };